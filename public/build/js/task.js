!function(){!async function(){try{const t=`/api/tareas?id=${r()}`,n=await fetch(t),o=await n.json();e=o.tareas,a()}catch(e){console.log(e)}}();let e=[],t=[];document.querySelector("#add-task").addEventListener("click",(function(){o()}));function n(n){const o=n.target.value;t=""!==o?e.filter((e=>e.estado===o)):[],a()}function a(){!function(){const e=document.querySelector("#task-list");for(;e.firstChild;)e.removeChild(e.firstChild)}(),function(){const t=e.filter((e=>"0"===e.estado)),n=document.querySelector("#pendientes");0===t.length?n.disabled=!0:n.disabled=!1}(),function(){const t=e.filter((e=>"1"===e.estado)),n=document.querySelector("#completadas");0===t.length?n.disabled=!0:n.disabled=!1}();const n=t.length?t:e;if(0===n.length){const e=document.querySelector("#task-list"),t=document.createElement("LI");return t.textContent="No hay tareas",t.classList.add("no-task"),void e.appendChild(t)}const a={0:"Pendiente",1:"Completada"};n.forEach((e=>{const t=document.createElement("LI");t.dataset.tareaId=e.id,t.classList.add("task");const n=document.createElement("P");n.textContent=e.nombre,n.ondblclick=function(){o(editar=!0,{...e})};const d=document.createElement("DIV");d.classList.add("opciones");const r=document.createElement("BUTTON");r.classList.add("estado-tarea"),r.classList.add(`${a[e.estado].toLowerCase()}`),r.textContent=a[e.estado],r.dataset.estadoTarea=e.estado,r.ondblclick=function(){!function(e){const t="1"===e.estado?"0":"1";e.estado=t,c(e)}({...e})};const i=document.createElement("BUTTON");i.classList.add("task-delete"),i.dataset.idTarea=e.id,i.textContent="Eliminar",i.ondblclick=function(){s({...e})},d.appendChild(r),d.appendChild(i),t.appendChild(n),t.appendChild(d);document.querySelector("#task-list").appendChild(t)}))}function o(t=!1,n={}){console.log(n);const o=document.createElement("DIV");o.classList.add("modal"),o.innerHTML=`\n            <form class="form new-task">\n                <legend>${t?"Editar tarea":"Agrega una nueva tarea"}</legend>\n                <div class="campo">\n                    <label>Tarea</label>\n                    <input\n                        type="text"\n                        name="tarea"\n                        placeholder="${n.nombre?"Edita la Tarea":"Agregar tarea"}"\n                        id="task"\n                        value="${n.nombre?n.nombre:""}"\n                    />\n                </div>\n                <div class="opciones">\n                    <input \n                        type="submit" \n                        class="submit-newtask" \n                        value="${n.nombre?"Guardar Cambios":"AÃ±adir Tarea"} "\n                        />\n                    <button type="button" class="close-modal">Cancelar</button>\n                </div>\n\n            </form>\n        `,setTimeout((()=>{document.querySelector(".form").classList.add("animar")}),0),o.addEventListener("click",(function(s){if(s.preventDefault(),s.target.classList.contains("close-modal")){document.querySelector(".form").classList.add("close"),setTimeout((()=>{o.remove()}),300)}if(s.target.classList.contains("submit-newtask")){const o=document.querySelector("#task").value.trim();if(""===o)return void d("* Este campo no puede ir vacio","error",document.querySelector(".form legend"));t?(n.nombre=o,c(n)):async function(t){const n=new FormData;n.append("nombre",t),n.append("proyectoId",r());try{const o="/api/tarea",c=await fetch(o,{method:"POST",body:n}),s=await c.json();if(d(s.mensaje,s.tipo,document.querySelector(".form legend")),"exito"===s.tipo){document.querySelector(".modal").remove();const n={id:String(s.id),nombre:t,estado:"0",proyectoId:s.proyectoId};e=[...e,n],a()}}catch(e){console.log(e)}}(o)}})),document.querySelector(".dashboard").appendChild(o)}function d(e,t,n){const a=document.querySelector(".alerta");a&&a.remove();const o=document.createElement("DIV");o.classList.add("alerta",t),o.textContent=e,n.parentElement.insertBefore(o,n.nextElementSibling),setTimeout((()=>{o.remove()}),3e3)}async function c(t){const{estado:n,id:o,nombre:d,proyectoId:c}=t,s=new FormData;s.append("id",o),s.append("nombre",d),s.append("estado",n),s.append("proyectoId",r());try{const t="/api/tarea/actualizar",c=await fetch(t,{method:"POST",body:s});if("exito"===(await c.json()).respuesta.tipo){const t=document.querySelector(".modal");t&&t.remove(),e=e.map((e=>(e.id===o&&(e.estado=n,e.nombre=d),e))),a()}}catch(e){console.log(e)}}async function s(t){const{estado:n,id:o,nombre:d}=t,c=new FormData;c.append("id",o),c.append("nombre",d),c.append("estado",n),c.append("proyectoId",r());try{const n="/api/tarea/eliminar",o=await fetch(n,{method:"POST",body:c});(await o.json()).resultado&&(e=e.filter((e=>e.id!==t.id)),a())}catch(e){}}function r(){const e=new URLSearchParams(window.location.search);return Object.fromEntries(e.entries()).id}document.querySelectorAll('#filters input[type="radio').forEach((e=>{e.addEventListener("input",n)}))}();